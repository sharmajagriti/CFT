
AWSTemplateFormatVersion: "2010-09-09"
Description: >
  This template deploys a VPC with a pair of public and private data-private subnets spread
  across three Availability Zones (Zone 1, Zone 2). It deploys an Internet Gateway and adds
  public routes to the pair of public subnets. Additionally, it deploys a NAT Gateway in the pair
  of public subnets and configures public routes for them in the pair of private data-private subnets.


Metadata:
  cfn-lint:
    config:
      ignore_checks:
        - W2001  # Ignore warning W2001

  # Create Parameter Groups and Label
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: "Basic Information"
        Parameters:
          - pProject
          - pEnvironment
          - pResourceName
      - Label:
          default: "Network Configuration"
        Parameters:
          - pCidrBlockVPC
          - pCidrBlockPublicSubnet1
          - pCidrBlockPublicSubnet2
          - pKeyPair
    ParameterLabels:
      pCidrBlockPublicSubnet1:
        default: "CidrBlock for Public Subnet AZ-1"
      pCidrBlockPublicSubnet2:
        default: "CidrBlock for Public Subnet AZ-2"

Parameters:
  pProject:
    Type: "String"
    Default: "project"
    AllowedPattern: "[a-z]*"
    MaxLength: 8
  pEnvironment:
    Description: "Server Environment name."
    ConstraintDescription: "Choose an Environment from the drop down"
    Type: String
    Default: "dev"
    MaxLength: 4
    AllowedValues:
      - dev
      - sit
      - uat
      - stage
      - prod
  pResourceName:
    Type: String
    Default: "t2"
    AllowedPattern: "[a-z0-9]*"
    MaxLength: 8
  pCidrBlockVPC:
    Description: "VPC CIDR Range"
    Type: String
    Default: "10.0.0.0/16"
    MinLength: "10"
    MaxLength: "18"
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
  pCidrBlockPublicSubnet1:
    Description: "CidrBlock for Public Subnet in the Availability Zone 1"
    Type: "String"
    Default: "10.0.11.0/24"
    MinLength: '10'
    MaxLength: '18'
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
  pCidrBlockPublicSubnet2:
    Description: "CidrBlock for  Public Subnet in the Availability Zone 2"
    Type: "String"
    Default: "10.0.12.0/24"
    MinLength: '10'
    MaxLength: '18'
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
  pKeyPair:
    Type: AWS::EC2::KeyPair::KeyName
    Default: "working"

Mappings:
  InstanceMap:
    InstanceType:
      dev: "t2.micro"
      test: "t2.micro"
      stage: "t2.micro"
      prod: "t2.micro"
  ImageMap:
    us-east-1:
      dev: "ami-04e5276ebb8451442"
  RegionMap:
    us-east-1:
      az1: us-east-1a
      az2: us-east-1b

Resources:
  ## :: Create VPC
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref pCidrBlockVPC
      EnableDnsHostnames: true
      EnableDnsSupport: true
      Tags:
        - Key: Name
          Value: !Sub "${pProject}-${pEnvironment}-${pResourceName}-VPC"

  ## :: Create Internet Gateway
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    DependsOn: VPC
    Properties:
      Tags:
        - Key: Name
          Value: !Sub "${pProject}-${pEnvironment}-${pResourceName}-InternetGateway"

  ## :: Attach Internet Gateway to VPC
  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    DependsOn:
      - VPC
      - InternetGateway
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC

  #  Public Tier Resources AZ -1 and AZ -2
  ## --------------------------------------------------------------------

  ##  AZ -1 Resources
  ## ----------------------------------

  ## :: Create PublicRouteTable1
  PublicRouteTable1:
    Type: AWS::EC2::RouteTable
    DependsOn:
      - VPC
      - InternetGateway
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub "${pProject}-${pEnvironment}-${pResourceName}-PublicRouteTable1"

  ## :: Route-out PublicRouteTable1 to Internet Gateway (Internet connection)
  InternetGatewayRoute1:
    Type: AWS::EC2::Route
    DependsOn:
      - InternetGateway
      - PublicRouteTable1
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
      RouteTableId: !Ref PublicRouteTable1

  ## :: Create PublicSubnet1
  PublicSubnet1:
    Type: AWS::EC2::Subnet
    DependsOn:
      - VPC
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref  pCidrBlockPublicSubnet1
      AvailabilityZone:
        Fn::FindInMap:
          - RegionMap
          - !Ref "AWS::Region"
          - az1
      Tags:
        - Key: Name
          Value: !Sub "${pProject}-${pEnvironment}-${pResourceName}-PublicSubnet1"

  ## :: Associate PublicRouteTable1 with PublicSubnet1
  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    DependsOn:
      - PublicSubnet1
      - PublicRouteTable1
    Properties:
      SubnetId: !Ref PublicSubnet1
      RouteTableId: !Ref PublicRouteTable1

  ##  AZ -2 Resources
  ## ----------------------------------

  ## :: Create PublicSubnet2
  PublicSubnet2:
    DependsOn:
      - VPC
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref  pCidrBlockPublicSubnet2
      AvailabilityZone:
        Fn::FindInMap:
          - RegionMap
          - !Ref "AWS::Region"
          - az2
      Tags:
        - Key: Name
          Value: !Sub "${pProject}-${pEnvironment}-${pResourceName}-PublicSubnet2"

  ## :: Associate PublicRouteTable1 with PublicSubnet2
  PublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    DependsOn:
      - PublicSubnet2
      - PublicRouteTable1
    Properties:
      SubnetId: !Ref PublicSubnet2
      RouteTableId: !Ref PublicRouteTable1

  WebServerRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${pProject}-${pEnvironment}-${pResourceName}-WebServerRole"
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonSSMFullAccess
        - arn:aws:iam::aws:policy/service-role/AmazonEC2RoleforSSM

  WebServerSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "SecurityGroup for WebServerSG"
      GroupName: !Sub "${pProject}-${pEnvironment}-${pResourceName}-WebServerSG"
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - Description: "Allow ICMP (Ping) traffic for 0.0.0.0/0"
          IpProtocol: 'icmp'
          FromPort: -1
          ToPort: -1
          CidrIp: '0.0.0.0/0'
        - Description: "Allow SSH traffic for 0.0.0.0/0"
          IpProtocol: "tcp"
          CidrIp: "0.0.0.0/0"
          FromPort: 22
          ToPort: 22
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: "0.0.0.0/0"
      Tags:
        - Key: Name
          Value: !Sub "${pProject}-${pEnvironment}-${pResourceName}-WebServerSG"
  
  IamInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles: [!Ref WebServerRole]

  Instance1:
    Type: AWS::EC2::Instance
    DependsOn:
      - IamInstanceProfile
    Properties:
      IamInstanceProfile: !Ref IamInstanceProfile
      ImageId: !FindInMap
        - ImageMap
        - !Ref "AWS::Region"
        - !Ref pEnvironment
      InstanceType: !FindInMap
        - InstanceMap
        - "InstanceType"
        - !Ref pEnvironment
      KeyName: !Ref pKeyPair
      NetworkInterfaces:
        - DeleteOnTermination: true
          AssociatePublicIpAddress: true
          DeviceIndex: "0"
          SubnetId: !Ref PublicSubnet1
          GroupSet: [!Ref WebServerSG]
      UserData:
        Fn::Base64:
          Fn::Sub: |
            #!/bin/bash -xe
            sudo yum update -y
            yum update -y
            sudo yum install python3 -y
            sudo yum install python3-pip -y

      Tags:
        - Key: StackName
          Value: !Sub "${AWS::StackName}"
        - Key: pEnvironment
          Value: !Ref pEnvironment
        - Key: Name
          Value: !Sub "${pProject}-${pEnvironment}-${pResourceName}-EC2"
          
 ########################################################################################################################################
           
  Instance2:
    Type: AWS::EC2::Instance
    DependsOn:
      - IamInstanceProfile
    Properties:
      IamInstanceProfile: !Ref IamInstanceProfile
      ImageId: !FindInMap
        - ImageMap
        - !Ref "AWS::Region"
        - !Ref pEnvironment
      InstanceType: !FindInMap
        - InstanceMap
        - "InstanceType"
        - !Ref pEnvironment
      KeyName: !Ref pKeyPair
      NetworkInterfaces:
        - DeleteOnTermination: true
          AssociatePublicIpAddress: true
          DeviceIndex: "0"
          SubnetId: !Ref PublicSubnet2
          GroupSet: [!Ref WebServerSG]
      UserData:
        Fn::Base64:
          Fn::Sub: |
            #!/bin/bash -xe
            sudo yum update -y
            yum update -y
            sudo yum install python3 -y
            sudo yum install python3-pip -y

      Tags:
        - Key: StackName
          Value: !Sub "${AWS::StackName}"
        - Key: pEnvironment
          Value: !Ref pEnvironment
        - Key: Name
          Value: !Sub "${pProject}-${pEnvironment}-${pResourceName}-EC2"

Outputs:

  pProject:
    Description: A reference to the pProject
    Value: !Ref pProject
    Export:
      Name: !Sub "${pProject}-${pEnvironment}-${pResourceName}"
  pEnvironment:
    Description: A reference to the pEnvironment
    Value: !Ref pEnvironment
    Export:
      Name: !Sub "${pProject}-${pEnvironment}-${pResourceName}-pEnvironment"

  pCidrBlockVPC:
    Description: A reference to the pCidrBlockVPC
    Value: !Ref pCidrBlockVPC
    Export:
      Name: !Sub "${pProject}-${pEnvironment}-${pResourceName}-pCidrBlockVPC"
  Region:
    Description: A reference to the VPC
    Value: !Ref "AWS::Region"
    Export:
      Name: !Sub "${pProject}-${pEnvironment}-${pResourceName}-Region"
  VPC:
    Description: A reference to the VPC
    Value: !Ref VPC
    Export:
      Name: !Sub "${pProject}-${pEnvironment}-${pResourceName}-VPC"
  InternetGateway:
    Description: A reference to the InternetGateway
    Value: !Ref InternetGateway
    Export:
      Name: !Sub "${pProject}-${pEnvironment}-${pResourceName}-InternetGateway"


  #  Public Tier Resources AZ -1 and AZ -2
  ## ------------------------------------------------------------------------------

  #   AZ -1 Resources
  ## ----------------------------------

  PublicRouteTable1:
    Description: A reference to the PublicRouteTable1
    Value: !Ref PublicRouteTable1
    Export:
      Name: !Sub "${pProject}-${pEnvironment}-${pResourceName}-PublicRouteTable1"
  pCidrBlockPublicSubnet1:
    Description: A reference to the pCidrBlockPublicSubnet1
    Value: !Ref pCidrBlockPublicSubnet1
    Export:
      Name: !Sub "${pProject}-${pEnvironment}-${pResourceName}-pCidrBlockPublicSubnet1"
  PublicSubnet1:
    Description: A reference to the PublicSubnet1
    Value: !Ref PublicSubnet1
    Export:
      Name: !Sub "${pProject}-${pEnvironment}-${pResourceName}-PublicSubnet1"


  ##  AZ -2 Resources
  ## ----------------------------------

  pCidrBlockPublicSubnet2:
    Description: A reference to the pCidrBlockPublicSubnet2
    Value: !Ref pCidrBlockPublicSubnet2
    Export:
      Name: !Sub "${pProject}-${pEnvironment}-${pResourceName}-pCidrBlockPublicSubnet2"
  PublicSubnet2:
    Description: A reference to the PublicSubnet2
    Value: !Ref PublicSubnet2
    Export:
      Name: !Sub "${pProject}-${pEnvironment}-${pResourceName}-PublicSubnet2"

  WebServerRole:
    Description: A reference to the WebServerRole
    Value: !Ref WebServerRole
    Export:
      Name: !Sub "${pProject}-${pEnvironment}-${pResourceName}-WebServerRole"
  WebServerSG:
    Description: "SecurityGroup for WebServerSG"
    Value: !Ref WebServerSG
    Export:
      Name: !Sub "${pProject}-${pEnvironment}-${pResourceName}-WebServerSG"
  Instance1:
    Description: A reference to the Instance
    Value: !Ref Instance1
    Export:
      Name: !Sub "${pProject}-${pEnvironment}-${pResourceName}-AppInstance1"
  Instance2:
    Description: A reference to the Instance
    Value: !Ref Instance2
    Export:
      Name: !Sub "${pProject}-${pEnvironment}-${pResourceName}-AppInstance2"

  Instance1PrivateIp:
    Description: A reference to the Instance PrivateIp
    Value: !GetAtt Instance1.PrivateIp
    Export:
      Name: !Sub "${pProject}-${pEnvironment}-${pResourceName}-Instance1PrivateIp"
      
  Instance2PrivateIp:
    Description: A reference to the Instance PrivateIp
    Value: !GetAtt Instance2.PrivateIp
    Export:
      Name: !Sub "${pProject}-${pEnvironment}-${pResourceName}-Instance2PrivateIp"